.TH powernowd 8 "January 2004"
.\" Copyright (c) GPL
.SH NAME
powernowd \- Daemon to control the speed and voltage of CPUs.
.SH SYNOPSIS
\fBpowernowd\fP [\fIoptions\fP]

.SH DESCRIPTION
\fBpowernowd\fP should be started during the system boot, and will run as a 
background process, by default. 
.br 
This is a simple client to the CPUFreq driver that uses Linux kernel v2.5/v2.6 
sysfs interface.  You need a supported CPU and a kernel that supports 
sysfs to run this daemon.  The name is somewhat misleading, as this will work
with any CPUfreq capable processor, not just processors supporting AMD's 
PowerNow! technology.  However, it is designed to work better on processors 
that support more then 2 frequency steps like those with AMD's PowerNow! or the
new Pentium M processors. 
.br 
.nf
This daemon has been tested on:
	AMD Mobile Duron 850MHz
	PowerPC G3 900MHz
	AMD K6-2+ 450MHz
.fi
.br
.nf
I have gotten successful reports of people running this on:
	SMP Intel P4-m (speedstep, hyperthreading)
	Intel P3
	Intel Pentium-M
	
.fi
Because there's really nothing AMD-specific about this daemon, I may change 
the name in the near future.. I was thinking of 'freqout', so be prepared ;-)
.SH OPTIONS
.br
.PP
.nf
Available Options:
	\fB-h\fR	print help message
	\fB-d\fR	don't detach from terminal (default is to
		detach and run in the background)
	\fB-v\fR	Increase output verbosity, can be used more than once. 
	\fB-q\fR	Quiet mode, only emergency output.
	\fB-n\fR	Include 'nice'd processes in calculations
	\fB-m\fR #	Modes of operation, can be 0, 1, 2, or 3:
		0 = SINE, 1 = AGGRESSIVE (default), 2 = PASSIVE, 3 = LEAPS
	\fB-s\fR #	Frequency step in kHz (default = 100000)
	\fB-p\fR #	Polling frequency in msecs (default = 1000)
	\fB-u\fR #	CPU usage upper limit percentage [0 .. 100, default 80]
	\fB-l\fR #    CPU usage lower limit percentage [0 .. 100, default 20]
.fi
.br
.nf
There are 3 modes supported by this client:

Mode 0, SINE : Changes the frequency as a sine wave function, raising the 
               frequency by "step" Hz every time the CPU usage goes over 80%,
	       and decreases it by "step" Hz when the CPU usage falls under
	       20%.
Mode 1, AGGRESSIVE : Changes frequency by a sawtooth function.	Immediately
		     jumps to the highest frequency whenever CPU usage goes 
		     over 80%, and decreases by "step" Hz as it drops below
		     20%.  This is the default behavior as I've found it to
		     give the best results.
Mode 2, PASSIVE : The inverse of AGGRESSIVE. Immediately jump to lowest 
		  frequency when usage drops below 20%. Raise by "step" Hz
		  if it goes above 80%.
Mode 3, LEAPS :	Immediately jump to the highest frequency if usage above 80%.
		Immediately jump to the lowest frequency if usage below 20%.
.fi 
.SH DEPENDENCIES
.BR
Needs kernel 2.6 
\fI\fP.
.SH FILES
.PD 0
.B 
.br
.B 
.br
.B /var/lock/subsys/powernowd
.B /usr/sbin/powernowd
.B /etc/rc.d/init.d/powernowd
.br
.PD
.SH BUGS
.br 
.SH SEE ALSO
.br
cpufreq
.SH AUTHORS
.br 
Written by John Clemens <clemej@alum.rpi.edu>
.br
You can find out more information and download the latest version of
powernowd from http://www.deater.net/john/powernowd.html
.br
You can find out more information about me at http://www.deater.net/john
I welcome comments and contributions :)
.br 
Implementation of powernowd service by Nicolas Brouard
.br


